-- UNLESS OTHERWISE NOTED, ALL TABLES ARE IN THE DMODCUNN SCHEMA


/*
We are seeking to determine the number of veterans service connected under 
the dental and oral with the following diagnostic codes:  
9900, 9901, 9902, 9903, 9904, 9905, 9906, 9907, 9908, 9909, 9911, 9912, 9913,
 9914, 9915 and 9916. 
 
Using the above criteria, we specifically request the following information
 from FY 2011 to FY 2013:
1.  The number of accessions for each diagnostic code by degree of disability;
2.  The total number of service-connected veterans by degree of disability.  
    If a veteran is service-connected for more than one of the diagnostic codes,
     please count the diagnostic code with the highest degree of disability. 
      However, if a veteran is service-connected for multiple diagnostic codes 
      with the same degree of disability, please count the diagnostic code with
       the highest numerical value.
3.  From the number provided in list 2, please provide a breakdown by combined
     degree of disability.
4.  The unique number of living veterans denied service connection for one of
     the diagnostic codes listed above;
5.  From the unique veterans in #4 denied service connection for one of the 
     diagnostic codes listed above, please provide the number of veterans
      that are currently on the rolls;
6.  From list #5, please provide a breakdown by combined degree of disability;
7.  A count of veterans that received an increase from their previous rating
    by degree of disability (i.e. show the number of Veterans with a previous
     rating of 0% and indicate how many were increased to the degree of
      disability at 10%, 20%, 30%...100%). Please see example shown as I.E.
       of Increased Evaluations on file layout.
8.  The total number of claims received during each fiscal year with a
      disability associated with one or more of the diagnostic codes listed
       above. 
9.  The total number of claims completed during each fiscal year with one or
      more of the diagnostic codes listed above.

 [ X ] include only 4 digit diagnostic codes (we will only search for
  diagnostic codes that are 4 digits in length and will exclude all 8-digit
   hyphenated diagnostic codes)

*/


-- NEED BASELINES FOR SEPTEMBER 2010, SEPTEMBER 2011,SEPTEMBER 2012, AND
--         SEPTEMBER 2013 FOR ITEMS 2,3,7  
-- NEED ALL RATED ISSUES FOR SC FOR FY 2011, 2012, AND 2013 FOR ITEM 1
-- NEED ALL RATED ISSUES FOR NSC FOR FY 2011, 2012, AND 2013 FOR ITEM 4, 5, 6
-- NEED COMPLETED CLAIMS FOR ITEM 9
-- NEED PENDING CLAIMS AND CLARIFICATION FOR ITEM 8


 
-- GET BASE FOR ACCESSIONS (NEW GRANTS) AND DENIALS BY YEAR FY 11-13
-- verified with requestor that this is based on new grant of SC, not 
-- on the rolls award with money
CREATE TABLE AH4430_ISSUES_BASE_1 AS
SELECT DISTINCT D.JRN_LCTN_ID AS RBA_RO, D.PTCPNT_VET_ID, D.PRMLGN_DT,
       D.RATING_DT, D.PRFIL_DT AS D_PRFIL_DT, D.PRMLNG_CLAIM_ID, 
       CASE WHEN TRUNC(D.RATING_DT) BETWEEN TO_DATE('10/01/2010','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2011','MM/DD/YYYY') THEN 'FY11'
            WHEN TRUNC(D.RATING_DT) BETWEEN TO_DATE('10/01/2011','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2012','MM/DD/YYYY') THEN 'FY12'
            WHEN TRUNC(D.RATING_DT) BETWEEN TO_DATE('10/01/2012','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2013','MM/DD/YYYY') THEN 'FY13'
       END FISCAL_YEAR        
FROM   RBA_SS.SS_RBA_PRFIL D       
WHERE  D.PRMLGN_DT IS NOT NULL
   AND NVL(D.LOCKED_IND,'X') != 'Y'    
   AND TRUNC(D.RATING_DT) BETWEEN TO_DATE('10/01/2010','MM/DD/YYYY') 
            AND TO_DATE('09/30/2013','MM/DD/YYYY') 
   AND NVL(D.SYSTEM_TYPE_CD,'X') != 'B';
COMMIT;

SELECT FISCAL_YEAR, COUNT(*) FROM AH4430_ISSUES_BASE_1 GROUP BY FISCAL_YEAR;
-- FY11    1181171
-- FY13    1372323
-- FY12    1310976


CREATE TABLE AH4430_ISSUES_BASE_2 AS
SELECT DISTINCT D.*, B.BEGIN_DT, B.DSBLTY_ID, B.DSBLTY_DT,
       B.RATING_DECN_ID, B.PRFIL_DT AS B_PRFIL_DT, B.RBA_PRFIL_ISSUE_ID     
FROM   AH4430_ISSUES_BASE_1 D,
       RBA_SS.SS_RATING_DECN B       
WHERE  B.PTCPNT_VET_ID = D.PTCPNT_VET_ID
AND    (B.PRFIL_DT = D.D_PRFIL_DT OR B.PRFIL_DT < D.D_PRFIL_DT);
COMMIT;

SELECT FISCAL_YEAR, COUNT(*) FROM AH4430_ISSUES_BASE_2 GROUP BY FISCAL_YEAR;;
-- FY13    36646185
-- FY11    28894576
-- FY12    33869013


CREATE TABLE AH4430_ISSUES_BASE_3 AS
SELECT DISTINCT D.*       
FROM   AH4430_ISSUES_BASE_2 D,
       RBA_SS.SS_RBA_PRFIL_ISSUE E
WHERE  D.PTCPNT_VET_ID = E.PTCPNT_VET_ID
AND    D.D_PRFIL_DT = E.PRFIL_DT
AND    D.RBA_PRFIL_ISSUE_ID = E.RBA_PRFIL_ISSUE_ID
AND    E.ISSUE_CATEGY_TYPE_CD = '0' -- CLAIMS FOR SC, NOT EVALS
;
COMMIT;

SELECT FISCAL_YEAR, COUNT(*) FROM AH4430_ISSUES_BASE_3 GROUP BY FISCAL_YEAR;
-- FY11    2517238
-- FY13    4223039
-- FY12    3455577


CREATE TABLE AH4430_ISSUES_BASE_4 AS
SELECT DISTINCT D.*, C.DSBLTY_DECN_TYPE_CD, C.DSBLTY_DECN_BASIS_TYPE_CD        
FROM   AH4430_ISSUES_BASE_3 D,
       RBA_SS.SS_DSBLTY C 
WHERE  D.B_PRFIL_DT = C.PRFIL_DT
AND    D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
AND    (C.PRFIL_DT = D.D_PRFIL_DT OR C.PRFIL_DT < D.D_PRFIL_DT)
AND    D.DSBLTY_ID = C.DSBLTY_ID
AND    D.DSBLTY_DT = C.DSBLTY_DT
AND    C.DSBLTY_DECN_TYPE_CD IN ('NOTSVCCON','SVCCONNCTED');
COMMIT;

SELECT FISCAL_YEAR, COUNT(*) FROM AH4430_ISSUES_BASE_4 GROUP BY FISCAL_YEAR;
-- FY11    2326753
-- FY13    3997759
-- FY12    3129679


CREATE TABLE AH4430_ISSUES_BASE_5 AS
SELECT DISTINCT D.*, A.DGNSTC_TYPE_CD, A.PRCNT_NBR        
FROM   AH4430_ISSUES_BASE_4 D,
       RBA_SS.SS_DSBLTY_EVALTN A
WHERE  A.RATING_DECN_ID = D.RATING_DECN_ID
AND    A.HYPNTD_DGNSTC_TYPE_CD IS NULL -- REQUEST REQUIREMENT
AND    A.DGNSTC_TYPE_CD IN ('9900','9901','9902','9903','9904','9905','9906',
             '9907','9908','9909','9911','9912','9913','9914','9915','9916');
COMMIT;

SELECT FISCAL_YEAR, COUNT(*) FROM AH4430_ISSUES_BASE_5 GROUP BY FISCAL_YEAR;
-- FY11    6544
-- FY13    11694
-- FY12    8493


CREATE TABLE AH4430_ISSUES_BASE_6 AS
SELECT Z.* FROM
(SELECT X.*, ROW_NUMBER() OVER(PARTITION BY X.RATING_ID 
                          ORDER BY X.BEGIN_DT ASC) AS ROW_RANK
 FROM
(SELECT DISTINCT D.*, P.FILE_NBR, SUBSTR(P.FILE_NBR,-2,2) TD,
        SUBSTR(P.FILE_NBR,1,((LENGTH(P.FILE_NBR))-2)) FILE_NUM_BAL, 
        P.LAST_NM, P.FIRST_NM, P.DEATH_DT,
        P.FILE_NBR||D.RATING_DT||D.DSBLTY_ID RATING_ID         
 FROM   AH4430_ISSUES_BASE_5 D,
        COMMON_SS.SS_PERSON P
 WHERE  D.PTCPNT_VET_ID = P.PTCPNT_ID
 AND    P.FILE_NBR IS NOT NULL) X ) Z
WHERE Z.ROW_RANK = 1;
COMMIT;

SELECT FISCAL_YEAR, COUNT(*), COUNT(DISTINCT RATING_ID)
FROM   AH4430_ISSUES_BASE_6 GROUP BY FISCAL_YEAR;
-- FY11    6534    6534
-- FY13    11668    11668
-- FY12    8478    8478
 


-- NEED BASELINES FOR SEPTEMBER 2010, SEPTEMBER 2011,SEPTEMBER 2012, AND
--         SEPTEMBER 2013 FOR ITEMS 2,3,7 

-- start with all dental/oral rating data prior to FY14, break down later
CREATE TABLE AH4430_ALL_DIAG_ADHOC_BASE AS
SELECT DISTINCT A.FILE_NBR, A.PTCPNT_VET_ID, A.RATING_DECN_END_DT AS END_DT,
       A.DISABILITY_INACTIVE_DT, A.RATING_INACTIVE_DT,
       A.DECN_TYPE_CD AS DSBLTY_DECN_TYPE_CD, 
       A.BASIS_TYPE AS DSBLTY_DECN_BASIS_TYPE_CD,
       A.DGNSTC_TYPE_CD, A.RATING_DECN_BEGIN_DT AS BEGIN_DT, A.PRCNT_NBR, 
       A.DSBLTY_ID, A.RATING_DT, A.PRFIL_DT, A.PRMLGN_DT
FROM   DW_ADHOC.ALL_DIAG_ADHOC A
WHERE  A.RATING_DT < TO_DATE('10/01/2013','MM/DD/YYYY')
AND    A.RATING_DECN_BEGIN_DT < TO_DATE('10/01/2013','MM/DD/YYYY')
AND    A.RATING_DT IS NOT NULL
AND    A.HYPNTD_DGNSTC_TYPE_CD IS NULL
AND    A.DGNSTC_TYPE_CD IN ('9900','9901','9902','9903','9904','9905','9906',
            '9907','9908','9909','9911','9912','9913','9914','9915','9916')
AND    A.DECN_TYPE_CD IN ('NOTSVCCON','SVCCONNCTED');
COMMIT; 

 
CREATE TABLE AH4430_SEP_2010_BASE AS 
SELECT Z.*
FROM
(SELECT X.*, ROW_NUMBER() OVER(PARTITION BY X.FILE_NBR||X.DSBLTY_ID
          ORDER BY X.BEGIN_DT DESC) AS ROW_RANK
 FROM
(SELECT DISTINCT A.*
 FROM   AH4430_ALL_DIAG_ADHOC_BASE A
 WHERE  A.RATING_DT < TO_DATE('10/01/2010','MM/DD/YYYY')
 AND    A.BEGIN_DT < TO_DATE('10/01/2010','MM/DD/YYYY')
 AND    NVL(A.END_DT,'01-JAN-2050') > TO_DATE('10/01/2010','MM/DD/YYYY')
 AND    NVL(A.DISABILITY_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2010','MM/DD/YYYY')
 AND    NVL(A.RATING_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2010','MM/DD/YYYY') 
 AND    A.PRMLGN_DT = (SELECT MAX(RBAP.PRMLGN_DT)
                       FROM   AH4430_ALL_DIAG_ADHOC_BASE RBAP
                       WHERE  A.FILE_NBR = RBAP.FILE_NBR
                       AND    A.PTCPNT_VET_ID = RBAP.PTCPNT_VET_ID
                       AND    RBAP.RATING_DT IS NOT NULL
                       AND    RBAP.PRMLGN_DT < TO_DATE('10/01/2011','MM/DD/YYYY'))) X) Z
WHERE Z.ROW_RANK = 1;
COMMIT;


SELECT COUNT(*), COUNT(DISTINCT FILE_NBR||DSBLTY_ID) 
FROM   AH4430_SEP_2010_BASE;
--  27204    27204


CREATE TABLE AH4430_SEP_2011_BASE AS 
SELECT Z.*
FROM
(SELECT X.*, ROW_NUMBER() OVER(PARTITION BY X.FILE_NBR||X.DSBLTY_ID
          ORDER BY X.BEGIN_DT DESC) AS ROW_RANK
 FROM
(SELECT DISTINCT A.*
 FROM   AH4430_ALL_DIAG_ADHOC_BASE A
 WHERE  A.RATING_DT < TO_DATE('10/01/2011','MM/DD/YYYY')
 AND    A.BEGIN_DT < TO_DATE('10/01/2011','MM/DD/YYYY')
 AND    NVL(A.END_DT,'01-JAN-2050') > TO_DATE('10/01/2011','MM/DD/YYYY')
 AND    NVL(A.DISABILITY_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2011','MM/DD/YYYY')
 AND    NVL(A.RATING_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2011','MM/DD/YYYY') 
 AND    A.PRMLGN_DT = (SELECT MAX(RBAP.PRMLGN_DT)
                       FROM   AH4430_ALL_DIAG_ADHOC_BASE RBAP
                       WHERE  A.FILE_NBR = RBAP.FILE_NBR
                       AND    A.PTCPNT_VET_ID = RBAP.PTCPNT_VET_ID
                       AND    RBAP.RATING_DT IS NOT NULL
                       AND    RBAP.PRMLGN_DT < TO_DATE('10/01/2011','MM/DD/YYYY'))) X) Z
WHERE Z.ROW_RANK = 1;
COMMIT;


SELECT COUNT(*), COUNT(DISTINCT FILE_NBR||DSBLTY_ID) 
FROM   AH4430_SEP_2011_BASE;
-- 34328    34328


CREATE TABLE AH4430_SEP_2012_BASE AS 
SELECT Z.*
FROM
(SELECT X.*, ROW_NUMBER() OVER(PARTITION BY X.FILE_NBR||X.DSBLTY_ID
          ORDER BY X.BEGIN_DT DESC) AS ROW_RANK
 FROM
(SELECT DISTINCT A.*
 FROM   AH4430_ALL_DIAG_ADHOC_BASE A
 WHERE  A.RATING_DT < TO_DATE('10/01/2012','MM/DD/YYYY')
 AND    A.BEGIN_DT < TO_DATE('10/01/2012','MM/DD/YYYY')
 AND    NVL(A.END_DT,'01-JAN-2050') > TO_DATE('10/01/2012','MM/DD/YYYY')
 AND    NVL(A.DISABILITY_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2012','MM/DD/YYYY')
 AND    NVL(A.RATING_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2012','MM/DD/YYYY') 
 AND    A.PRMLGN_DT = (SELECT MAX(RBAP.PRMLGN_DT)
                       FROM   AH4430_ALL_DIAG_ADHOC_BASE RBAP
                       WHERE  A.FILE_NBR = RBAP.FILE_NBR
                       AND    A.PTCPNT_VET_ID = RBAP.PTCPNT_VET_ID
                       AND    RBAP.RATING_DT IS NOT NULL
                       AND    RBAP.PRMLGN_DT < TO_DATE('10/01/2012','MM/DD/YYYY'))) X) Z
WHERE Z.ROW_RANK = 1;
COMMIT;


SELECT COUNT(*), COUNT(DISTINCT FILE_NBR||DSBLTY_ID) 
FROM   AH4430_SEP_2012_BASE;
-- 37932    37932


CREATE TABLE AH4430_SEP_2013_BASE AS 
SELECT Z.*
FROM
(SELECT X.*, ROW_NUMBER() OVER(PARTITION BY X.FILE_NBR||X.DSBLTY_ID
          ORDER BY X.BEGIN_DT DESC) AS ROW_RANK
 FROM
(SELECT DISTINCT A.*
 FROM   AH4430_ALL_DIAG_ADHOC_BASE A
 WHERE  A.RATING_DT < TO_DATE('10/01/2013','MM/DD/YYYY')
 AND    A.BEGIN_DT < TO_DATE('10/01/2013','MM/DD/YYYY')
 AND    NVL(A.END_DT,'01-JAN-2050') > TO_DATE('10/01/2013','MM/DD/YYYY')
 AND    NVL(A.DISABILITY_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2013','MM/DD/YYYY')
 AND    NVL(A.RATING_INACTIVE_DT,'01-JAN-2050') > TO_DATE('10/01/2013','MM/DD/YYYY') 
 AND    A.PRMLGN_DT = (SELECT MAX(RBAP.PRMLGN_DT)
                       FROM   AH4430_ALL_DIAG_ADHOC_BASE RBAP
                       WHERE  A.FILE_NBR = RBAP.FILE_NBR
                       AND    A.PTCPNT_VET_ID = RBAP.PTCPNT_VET_ID
                       AND    RBAP.RATING_DT IS NOT NULL
                       AND    RBAP.PRMLGN_DT < TO_DATE('10/01/2013','MM/DD/YYYY'))) X) Z
WHERE Z.ROW_RANK = 1;
COMMIT;


SELECT COUNT(*), COUNT(DISTINCT FILE_NBR||DSBLTY_ID) 
FROM   AH4430_SEP_2013_BASE;
-- 42609    42609



 
-- GET ALL COMPLETED CLAIMS ASSOCIATED WITH RATINGS ABOVE FOR ITEMS 8 AND 9
CREATE TABLE AH4430_RATINGS_CLAIMS AS
SELECT DISTINCT A.FILE_NBR, E.END_PRODUCT_CD AS EPC, C.STN_NBR, C.CLAIM_DT, 
       C.CLOSED_DT, R.BNFT_CLAIM_ID,

       CASE WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2004','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2005','MM/DD/YYYY') THEN 'FY05'       
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2005','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2006','MM/DD/YYYY') THEN 'FY06'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2006','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2007','MM/DD/YYYY') THEN 'FY07'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2007','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2008','MM/DD/YYYY') THEN 'FY08'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2008','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2009','MM/DD/YYYY') THEN 'FY09'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2009','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2010','MM/DD/YYYY') THEN 'FY10'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2010','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2011','MM/DD/YYYY') THEN 'FY11'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2011','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2012','MM/DD/YYYY') THEN 'FY12'
            WHEN TRUNC(C.CLAIM_DT) BETWEEN TO_DATE('10/01/2012','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2013','MM/DD/YYYY') THEN 'FY13'
       END RECEIPT_FISCAL_YEAR,  
       
       CASE WHEN TRUNC(C.CLOSED_DT) BETWEEN TO_DATE('10/01/2010','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2011','MM/DD/YYYY') THEN 'FY11'
            WHEN TRUNC(C.CLOSED_DT) BETWEEN TO_DATE('10/01/2011','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2012','MM/DD/YYYY') THEN 'FY12'
            WHEN TRUNC(C.CLOSED_DT) BETWEEN TO_DATE('10/01/2012','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2013','MM/DD/YYYY') THEN 'FY13'
            WHEN TRUNC(C.CLOSED_DT) BETWEEN TO_DATE('10/01/2013','MM/DD/YYYY') 
                       AND TO_DATE('09/30/2014','MM/DD/YYYY') THEN 'FY14'
       END COMPLETE_FISCAL_YEAR
 
FROM   AH4430_ISSUES_BASE_6 A,
       EDW_CP.CMPLT_BENEFIT_CLAIM_DAILY_FACT C,
       RBA_SS.SS_RBA_PRFIL_BNFT_CLAIM  R,
       EDW_CP.END_PRODUCT_TYPE E   
WHERE  A.PTCPNT_VET_ID = R.PTCPNT_VET_ID
AND    A.D_PRFIL_DT = R.PRFIL_DT  
AND    R.BNFT_CLAIM_ID = C.BNFT_CLAIM_ID
AND    C.EP_ID = E.END_PRODUCT_ID
AND    C.CLAIM_DT IS NOT NULL
AND    C.CLOSED_DT IS NOT NULL
AND    C.CNCLD_DT IS NULL -- NO PCANS !
AND    R.BNFT_CLAIM_ID != -99; 
COMMIT;

 
SELECT COUNT(*), COUNT(DISTINCT FILE_NBR||BNFT_CLAIM_ID) 
FROM   AH4430_RATINGS_CLAIMS;
-- 25817    25817 

 
------------------------------------------------------------------------
--OUTPUT
------------------------------------------------------------------------
-- 1.The number of accessions for each diagnostic code by degree of disability
SELECT * FROM
(SELECT DGNSTC_TYPE_CD, PRCNT_NBR, COUNT(*) CONDITIONS
 FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY PRCNT_NBR DESC 
       NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) AS VET_RANK
 FROM
(SELECT * 
 FROM   AH4430_ISSUES_BASE_6
 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED'
 AND    FISCAL_YEAR = 'FY11') A) B
WHERE VET_RANK = 1) C
GROUP BY DGNSTC_TYPE_CD, PRCNT_NBR
ORDER BY DGNSTC_TYPE_CD, PRCNT_NBR)
PIVOT( SUM(CONDITIONS) FOR PRCNT_NBR IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY DGNSTC_TYPE_CD;

SELECT * FROM
(SELECT DGNSTC_TYPE_CD, PRCNT_NBR, COUNT(*) CONDITIONS
 FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY PRCNT_NBR DESC 
       NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) AS VET_RANK
 FROM
(SELECT * 
 FROM   AH4430_ISSUES_BASE_6
 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED'
 AND    FISCAL_YEAR = 'FY12') A) B
WHERE VET_RANK = 1) C
GROUP BY DGNSTC_TYPE_CD, PRCNT_NBR
ORDER BY DGNSTC_TYPE_CD, PRCNT_NBR)
PIVOT( SUM(CONDITIONS) FOR PRCNT_NBR IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY DGNSTC_TYPE_CD;

SELECT * FROM
(SELECT DGNSTC_TYPE_CD, PRCNT_NBR, COUNT(*) CONDITIONS
 FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY PRCNT_NBR DESC 
       NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) AS VET_RANK
 FROM
(SELECT * 
 FROM   AH4430_ISSUES_BASE_6
 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED'
 AND    FISCAL_YEAR = 'FY13') A) B
WHERE VET_RANK = 1) C
GROUP BY DGNSTC_TYPE_CD, PRCNT_NBR
ORDER BY DGNSTC_TYPE_CD, PRCNT_NBR)
PIVOT( SUM(CONDITIONS) FOR PRCNT_NBR IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY DGNSTC_TYPE_CD;

------------------------------------------------------------------------

/*
2.  The total number of service-connected veterans by degree of disability.  
    If a veteran is service-connected for more than one of the diagnostic codes,
     please count the diagnostic code with the highest degree of disability. 
      However, if a veteran is service-connected for multiple diagnostic codes 
      with the same degree of disability, please count the diagnostic code with
       the highest numerical value.
NOTE: THIS IS RUNNING AWARDS WHERE THE VETERAN HAS A SPECIFIED SC DIAG CODE
*/
  
SELECT * FROM (
SELECT DGNSTC_TYPE_CD, PRCNT_NBR, COUNT(*) VETERANS
FROM
(
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_20110930_E6M D, -- FY2011

       (SELECT B.*
        FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2011_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  D.FILE_NBR = C.FILE_NBR
   AND  D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
   AND  D.PTCPNT_VET_ID = D.PTCPNT_BENE_ID
   AND  D.PTCPNT_BENE_ID = D.APORTN_RECIP_ID
   AND  D.AWARD_CURNT_STATUS_CD = 'A'
   AND  D.PAYEE_TYPE_CD = '00'
   AND  D.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(D.ENTLMT_TYPE_CD,2,1) = '1'
   AND  D.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT  
 FROM  
        (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2011_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C,
        
       (SELECT DISTINCT FILE_NUM_BAL||TD AS FILE_NBR, 
               TO_NUMBER(COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST 
        WHERE  EXTRACT_ID = 177
        AND    PAYEE_NUMBER = '00'
        AND    BENEFIT_TYPE = '1') D   
   
 WHERE  C.FILE_NBR = D.FILE_NBR)  )   
GROUP BY DGNSTC_TYPE_CD, PRCNT_NBR
ORDER BY DGNSTC_TYPE_CD, PRCNT_NBR)    
PIVOT( SUM(VETERANS) FOR PRCNT_NBR IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY DGNSTC_TYPE_CD;

— create table audit_test as 

SELECT * FROM (
SELECT DGNSTC_TYPE_CD, PRCNT_NBR, COUNT(*) VETERANS
FROM
(
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201209 D, -- FY2012

       (SELECT B.*
        FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2012_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  D.FILE_NBR = C.FILE_NBR
   AND  D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
   AND  D.PTCPNT_VET_ID = D.PTCPNT_BENE_ID
   AND  D.PTCPNT_BENE_ID = D.APORTN_RECIP_ID
   AND  D.AWARD_CURNT_STATUS_CD = 'A'
   AND  D.PAYEE_TYPE_CD = '00'
   AND  D.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(D.ENTLMT_TYPE_CD,2,1) = '1'
   AND  D.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT  
 FROM  
        (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2012_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C,
        
       (SELECT DISTINCT FILE_NUM_BAL||TD AS FILE_NBR, 
               TO_NUMBER(COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST 
        WHERE  EXTRACT_ID = 189
        AND    PAYEE_NUMBER = '00'
        AND    BENEFIT_TYPE = '1') D   
   
 WHERE  C.FILE_NBR = D.FILE_NBR)  )   
GROUP BY DGNSTC_TYPE_CD, PRCNT_NBR
ORDER BY DGNSTC_TYPE_CD, PRCNT_NBR)    
PIVOT( SUM(VETERANS) FOR PRCNT_NBR IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY DGNSTC_TYPE_CD;


-- NOTE: FOR END OF FY2013 AWARD COMPOSIT, DO NOT NEED CPMR
SELECT * FROM (
SELECT DGNSTC_TYPE_CD, PRCNT_NBR, COUNT(*) VETERANS
FROM
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201309 A, -- FY2013

       (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2013_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  C.FILE_NBR = A.FILE_NBR
   AND  C.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL)
GROUP BY DGNSTC_TYPE_CD, PRCNT_NBR
ORDER BY DGNSTC_TYPE_CD, PRCNT_NBR)    
PIVOT( SUM(VETERANS) FOR PRCNT_NBR IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY DGNSTC_TYPE_CD)
;

—- audit
select * from audit_test;

------------------------------------------------------------------------

-- 3.From the number provided in list 2, please provide a breakdown by combined
--    degree of disability.

SELECT COMBND_DEGREE_PCT, COUNT(*) VETERANS
FROM
(
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_20110930_E6M D, -- FY2011

       (SELECT B.*
        FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2011_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  D.FILE_NBR = C.FILE_NBR
   AND  D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
   AND  D.PTCPNT_VET_ID = D.PTCPNT_BENE_ID
   AND  D.PTCPNT_BENE_ID = D.APORTN_RECIP_ID
   AND  D.AWARD_CURNT_STATUS_CD = 'A'
   AND  D.PAYEE_TYPE_CD = '00'
   AND  D.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(D.ENTLMT_TYPE_CD,2,1) = '1'
   AND  D.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT  
 FROM  
        (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2011_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C,
        
       (SELECT DISTINCT FILE_NUM_BAL||TD AS FILE_NBR, 
               TO_NUMBER(COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST 
        WHERE  EXTRACT_ID = 177
        AND    PAYEE_NUMBER = '00'
        AND    BENEFIT_TYPE = '1') D   
   
 WHERE  C.FILE_NBR = D.FILE_NBR)  )   
GROUP BY COMBND_DEGREE_PCT
ORDER BY COMBND_DEGREE_PCT;


SELECT COMBND_DEGREE_PCT, COUNT(*) VETERANS
FROM
(
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201209 D, -- FY2012

       (SELECT B.*
        FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2012_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  D.FILE_NBR = C.FILE_NBR
   AND  D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
   AND  D.PTCPNT_VET_ID = D.PTCPNT_BENE_ID
   AND  D.PTCPNT_BENE_ID = D.APORTN_RECIP_ID
   AND  D.AWARD_CURNT_STATUS_CD = 'A'
   AND  D.PAYEE_TYPE_CD = '00'
   AND  D.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(D.ENTLMT_TYPE_CD,2,1) = '1'
   AND  D.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, D.COMBND_DEGREE_PCT  
 FROM  
        (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2012_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C,
        
       (SELECT DISTINCT FILE_NUM_BAL||TD AS FILE_NBR, 
               TO_NUMBER(COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST 
        WHERE  EXTRACT_ID = 189
        AND    PAYEE_NUMBER = '00'
        AND    BENEFIT_TYPE = '1') D   
   
 WHERE  C.FILE_NBR = D.FILE_NBR)  )      
GROUP BY COMBND_DEGREE_PCT
ORDER BY COMBND_DEGREE_PCT;


SELECT COMBND_DEGREE_PCT, COUNT(*) VETERANS
FROM
(SELECT DISTINCT C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201309 A, -- FY2013

       (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2013_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  C.FILE_NBR = A.FILE_NBR
   AND  C.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL)    
GROUP BY COMBND_DEGREE_PCT
ORDER BY COMBND_DEGREE_PCT;

------------------------------------------------------------------------

-- 4.The unique number of living veterans denied service connection for one of
--     the diagnostic codes listed above
SELECT * FROM
(SELECT DGNSTC_TYPE_CD, LIVING_IND, COUNT(*) VETERANS
 FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY A.FILE_NBR||A.DGNSTC_TYPE_CD ORDER
         BY A.RATING_DT DESC) AS VET_RANK
 FROM
(SELECT Z.*, 
        CASE WHEN Z.DEATH_DT IS NULL THEN 'Y' 
             WHEN Z.DEATH_DT IS NOT NULL THEN 'N'
        END LIVING_IND 
 FROM   AH4430_ISSUES_BASE_6 Z
 WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
 AND    Z.FISCAL_YEAR = 'FY11') A ) B
WHERE VET_RANK = 1) C
GROUP BY DGNSTC_TYPE_CD, LIVING_IND
ORDER BY DGNSTC_TYPE_CD, LIVING_IND)
PIVOT( SUM(VETERANS) FOR LIVING_IND IN ('Y','N'))
ORDER BY DGNSTC_TYPE_CD;


SELECT * FROM
(SELECT DGNSTC_TYPE_CD, LIVING_IND, COUNT(*) VETERANS
 FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY A.FILE_NBR||A.DGNSTC_TYPE_CD ORDER
         BY A.RATING_DT DESC) AS VET_RANK
 FROM
(SELECT Z.*, 
        CASE WHEN Z.DEATH_DT IS NULL THEN 'Y' 
             WHEN Z.DEATH_DT IS NOT NULL THEN 'N'
        END LIVING_IND 
 FROM   AH4430_ISSUES_BASE_6 Z
 WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
 AND    Z.FISCAL_YEAR = 'FY12') A ) B
WHERE VET_RANK = 1) C
GROUP BY DGNSTC_TYPE_CD, LIVING_IND
ORDER BY DGNSTC_TYPE_CD, LIVING_IND)
PIVOT( SUM(VETERANS) FOR LIVING_IND IN ('Y','N'))
ORDER BY DGNSTC_TYPE_CD;


SELECT * FROM
(SELECT DGNSTC_TYPE_CD, LIVING_IND, COUNT(*) VETERANS
 FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY A.FILE_NBR||A.DGNSTC_TYPE_CD ORDER
         BY A.RATING_DT DESC) AS VET_RANK
 FROM
(SELECT Z.*, 
        CASE WHEN Z.DEATH_DT IS NULL THEN 'Y' 
             WHEN Z.DEATH_DT IS NOT NULL THEN 'N'
        END LIVING_IND 
 FROM   AH4430_ISSUES_BASE_6 Z
 WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
 AND    Z.FISCAL_YEAR = 'FY13') A ) B
WHERE VET_RANK = 1) C
GROUP BY DGNSTC_TYPE_CD, LIVING_IND
ORDER BY DGNSTC_TYPE_CD, LIVING_IND)
PIVOT( SUM(VETERANS) FOR LIVING_IND IN ('Y','N'))
ORDER BY DGNSTC_TYPE_CD;

------------------------------------------------------------------------

-- 5.  From the unique veterans in #4 denied service connection for one of the 
--     diagnostic codes listed above, please provide the number of veterans
--      that are currently on the rolls (AS OF END OF FY OF DENIAL!);
-- 6. From list #5, please provide a breakdown by combined degree of disability

SELECT COMBND_DEGREE_PCT, COUNT(*) VETERANS
FROM
(
(SELECT DISTINCT A.FILE_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_20110930_E6M A, -- FY2011

       (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY11') B

 WHERE  B.FILE_NBR = A.FILE_NBR
   AND  B.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT B.FILE_NBR, A.COMBND_DEGREE_PCT   
 FROM  (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY11') B,
        
       (SELECT DISTINCT C.FILE_NUM_BAL||C.TD AS FILE_NBR, 
                TO_NUMBER(C.COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST C
        WHERE  C.EXTRACT_ID = 177
        AND    C.PAYEE_NUMBER = '00'
        AND    C.BENEFIT_TYPE = '1') A   
   
 WHERE  B.FILE_NBR = A.FILE_NBR)  )   
   
GROUP BY COMBND_DEGREE_PCT
ORDER BY COMBND_DEGREE_PCT;



SELECT COMBND_DEGREE_PCT, COUNT(*) VETERANS
FROM
(
(SELECT DISTINCT A.FILE_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201209 A, -- FY2012

       (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY12') B

 WHERE  B.FILE_NBR = A.FILE_NBR
   AND  B.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT B.FILE_NBR, A.COMBND_DEGREE_PCT   
 FROM  (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY12') B,
        
       (SELECT DISTINCT C.FILE_NUM_BAL||C.TD AS FILE_NBR, 
                TO_NUMBER(C.COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST C
        WHERE  C.EXTRACT_ID = 189
        AND    C.PAYEE_NUMBER = '00'
        AND    C.BENEFIT_TYPE = '1') A   
   
 WHERE  B.FILE_NBR = A.FILE_NBR)  )   
   
GROUP BY COMBND_DEGREE_PCT
ORDER BY COMBND_DEGREE_PCT;


-- NOTE: FOR END OF FY2013 AWARD COMPOSIT, DO NOT NEED CPMR
SELECT COMBND_DEGREE_PCT, COUNT(*) VETERANS
FROM
(SELECT DISTINCT A.FILE_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201309 A, -- FY2013

       (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY13') B

 WHERE  B.FILE_NBR = A.FILE_NBR
   AND B.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND A.AWARD_CURNT_STATUS_CD = 'A'
   AND A.PAYEE_TYPE_CD = '00'
   AND A.ENTLMT_TYPE_CD != '81'
   AND SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND A.COMBND_DEGREE_PCT IS NOT NULL)
GROUP BY COMBND_DEGREE_PCT
ORDER BY COMBND_DEGREE_PCT;
     
------------------------------------------------------------------------


/*
7.  A count of veterans that received an increase from their previous rating
    by degree of disability (i.e. show the number of Veterans with a previous
     rating of 0% and indicate how many were increased to the degree of
      disability at 10%, 20%, 30%...100%). Please see example shown as I.E.
       of Increased Evaluations on file layout.
*/
-- CHECKED WITH REQUESTOR,THEY WANT CONDITION CHANGES, NOT CDD

-- THIS CODE IS FOR CONDITION CHANGES, VERY FEW FOUND
SELECT *
FROM (
SELECT PRIOR_PERCENT, NEW_PERCENT, COUNT(FILE_NBR) AS CONDITIONS
FROM (
SELECT DISTINCT A.FILE_NBR, B.DGNSTC_TYPE_CD, B.PRCNT_NBR AS PRIOR_PERCENT,
       A.PRCNT_NBR AS NEW_PERCENT, A.DSBLTY_ID

FROM   (SELECT * 
        FROM   AH4430_SEP_2011_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT * 
        FROM   AH4430_SEP_2010_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.DGNSTC_TYPE_CD = B.DGNSTC_TYPE_CD
AND     A.DSBLTY_ID = B.DSBLTY_ID 
AND     A.PRCNT_NBR > B.PRCNT_NBR)
GROUP BY PRIOR_PERCENT, NEW_PERCENT
ORDER BY PRIOR_PERCENT, NEW_PERCENT)
PIVOT( SUM(CONDITIONS) FOR NEW_PERCENT IN (10,20,30,40,50,60,70,80,90,100))
ORDER BY PRIOR_PERCENT;
-- NOTE, VALIDATED ABOVE IN SHARE


SELECT *
FROM (
SELECT PRIOR_PERCENT, NEW_PERCENT, COUNT(FILE_NBR) AS CONDITIONS
FROM (
SELECT DISTINCT A.FILE_NBR, B.DGNSTC_TYPE_CD, B.PRCNT_NBR AS PRIOR_PERCENT,
       A.PRCNT_NBR AS NEW_PERCENT, A.DSBLTY_ID

FROM   (SELECT * 
        FROM   AH4430_SEP_2012_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT * 
        FROM   AH4430_SEP_2011_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.DGNSTC_TYPE_CD = B.DGNSTC_TYPE_CD
AND     A.DSBLTY_ID = B.DSBLTY_ID 
AND     A.PRCNT_NBR > B.PRCNT_NBR)
GROUP BY PRIOR_PERCENT, NEW_PERCENT
ORDER BY PRIOR_PERCENT, NEW_PERCENT)
PIVOT( SUM(CONDITIONS) FOR NEW_PERCENT IN (10,20,30,40,50,60,70,80,90,100))
ORDER BY PRIOR_PERCENT;


SELECT *
FROM (
SELECT PRIOR_PERCENT, NEW_PERCENT, COUNT(FILE_NBR) AS CONDITIONS
FROM (
SELECT DISTINCT A.FILE_NBR, B.DGNSTC_TYPE_CD, B.PRCNT_NBR AS PRIOR_PERCENT,
       A.PRCNT_NBR AS NEW_PERCENT, A.DSBLTY_ID

FROM   (SELECT * 
        FROM   AH4430_SEP_2013_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT * 
        FROM   AH4430_SEP_2012_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.DGNSTC_TYPE_CD = B.DGNSTC_TYPE_CD
AND     A.DSBLTY_ID = B.DSBLTY_ID 
AND     A.PRCNT_NBR > B.PRCNT_NBR)
GROUP BY PRIOR_PERCENT, NEW_PERCENT
ORDER BY PRIOR_PERCENT, NEW_PERCENT)
PIVOT( SUM(CONDITIONS) FOR NEW_PERCENT IN (10,20,30,40,50,60,70,80,90,100))
ORDER BY PRIOR_PERCENT;

-- CODE ABOVE IS FOR CONDITION CHANGES, VERY FEW FOUND


-- THIS CODE IS FOR CDD CHANGES - VERIFIED REQUESTOR WANTS CONDITION LEVEL
/*
SELECT *
FROM (
SELECT PRIOR_PERCENT, NEW_PERCENT, COUNT(FILE_NBR) AS VETERANS
FROM (
SELECT DISTINCT A.FILE_NBR, B.PRIOR_PERCENT, A.NEW_PERCENT

FROM   (SELECT M.*, R.SC_COMBND_PCT_NBR AS NEW_PERCENT
        FROM   AH4430_SEP_2011_BASE M,
               RBA_SS.SS_RBA_RATING_DETAIL R
        WHERE  M.PTCPNT_VET_ID = R.PTCPNT_VET_ID
        AND    M.PRFIL_DT = R.PRFIL_DT
        AND    M.DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT M.*, R.SC_COMBND_PCT_NBR AS PRIOR_PERCENT
        FROM   AH4430_SEP_2010_BASE M,
               RBA_SS.SS_RBA_RATING_DETAIL R
        WHERE  M.PTCPNT_VET_ID = R.PTCPNT_VET_ID
        AND    M.PRFIL_DT = R.PRFIL_DT
        AND    M.DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.NEW_PERCENT > B.PRIOR_PERCENT)
GROUP BY PRIOR_PERCENT, NEW_PERCENT
ORDER BY PRIOR_PERCENT, NEW_PERCENT)
PIVOT( SUM(VETERANS) FOR NEW_PERCENT IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY PRIOR_PERCENT;

SELECT *
FROM (
SELECT PRIOR_PERCENT, NEW_PERCENT, COUNT(FILE_NBR) AS VETERANS
FROM (
SELECT DISTINCT A.FILE_NBR, B.PRIOR_PERCENT, A.NEW_PERCENT

FROM   (SELECT M.*, R.SC_COMBND_PCT_NBR AS NEW_PERCENT
        FROM   AH4430_SEP_2012_BASE M,
               RBA_SS.SS_RBA_RATING_DETAIL R
        WHERE  M.PTCPNT_VET_ID = R.PTCPNT_VET_ID
        AND    M.PRFIL_DT = R.PRFIL_DT
        AND    M.DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT M.*, R.SC_COMBND_PCT_NBR AS PRIOR_PERCENT
        FROM   AH4430_SEP_2011_BASE M,
               RBA_SS.SS_RBA_RATING_DETAIL R
        WHERE  M.PTCPNT_VET_ID = R.PTCPNT_VET_ID
        AND    M.PRFIL_DT = R.PRFIL_DT
        AND    M.DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.NEW_PERCENT > B.PRIOR_PERCENT)
GROUP BY PRIOR_PERCENT, NEW_PERCENT
ORDER BY PRIOR_PERCENT, NEW_PERCENT)
PIVOT( SUM(VETERANS) FOR NEW_PERCENT IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY PRIOR_PERCENT;

SELECT *
FROM (
SELECT PRIOR_PERCENT, NEW_PERCENT, COUNT(FILE_NBR) AS VETERANS
FROM (
SELECT DISTINCT A.FILE_NBR, B.PRIOR_PERCENT, A.NEW_PERCENT

FROM   (SELECT M.*, R.SC_COMBND_PCT_NBR AS NEW_PERCENT
        FROM   AH4430_SEP_2013_BASE M,
               RBA_SS.SS_RBA_RATING_DETAIL R
        WHERE  M.PTCPNT_VET_ID = R.PTCPNT_VET_ID
        AND    M.PRFIL_DT = R.PRFIL_DT
        AND    M.DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT M.*, R.SC_COMBND_PCT_NBR AS PRIOR_PERCENT
        FROM   AH4430_SEP_2012_BASE M,
               RBA_SS.SS_RBA_RATING_DETAIL R
        WHERE  M.PTCPNT_VET_ID = R.PTCPNT_VET_ID
        AND    M.PRFIL_DT = R.PRFIL_DT
        AND    M.DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.NEW_PERCENT > B.PRIOR_PERCENT)
GROUP BY PRIOR_PERCENT, NEW_PERCENT
ORDER BY PRIOR_PERCENT, NEW_PERCENT)
PIVOT( SUM(VETERANS) FOR NEW_PERCENT IN (0,10,20,30,40,50,60,70,80,90,100))
ORDER BY PRIOR_PERCENT;
*/
-- CODE ABOVE IS FOR CDD CHANGES

------------------------------------------------------------------------



-- 8.  The total number of claims received during each fiscal year with a
--      disability associated with one or more of the diagnostic codes listed
--       above. 
-- NOTE: MATCH FINALIZED RATINGS TO CLAIMS VIA RBA BRIDGE TABLE, USE DOC FOR FY    
       
SELECT RECEIPT_FISCAL_YEAR, COUNT(*) CLAIMS
FROM   AH4430_RATINGS_CLAIMS
WHERE  RECEIPT_FISCAL_YEAR IN ('FY11','FY12','FY13')
GROUP BY ROLLUP(RECEIPT_FISCAL_YEAR)
ORDER BY RECEIPT_FISCAL_YEAR;
       

------------------------------------------------------------------------      
       
-- 9.  The total number of claims completed during each fiscal year with one or
--      more of the diagnostic codes listed above.
-- NOTE: MATCH FINALIZED RATINGS TO CLAIMS VIA RBA BRIDGE TABLE,
-- USE CLAIM CLOSED DATE FOR FY 

SELECT COMPLETE_FISCAL_YEAR, COUNT(*) CLAIMS
FROM   AH4430_RATINGS_CLAIMS
WHERE  COMPLETE_FISCAL_YEAR IN ('FY11','FY12','FY13')
GROUP BY ROLLUP(COMPLETE_FISCAL_YEAR)
ORDER BY COMPLETE_FISCAL_YEAR;



------------------------------------------------------------------------

-- DETAILED SAMPLES FOR INTERNAL VALIDATION

------------------------------------------------------------------------
-- 1. accessions
SELECT * FROM (
SELECT C.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY PRCNT_NBR DESC 
       NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) AS VET_RANK
 FROM
(SELECT * 
 FROM   AH4430_ISSUES_BASE_6
 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
WHERE VET_RANK = 1) C
ORDER BY SEQ)     
WHERE ROWNUM < 101;


-- 2. running awards and 3.CDD
SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(
(SELECT DISTINCT 'FY11' FISCAL_YEAR, C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, 
        D.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_20110930_E6M D, -- FY2011

       (SELECT B.*
        FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2011_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  D.FILE_NBR = C.FILE_NBR
   AND  D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
   AND  D.PTCPNT_VET_ID = D.PTCPNT_BENE_ID
   AND  D.PTCPNT_BENE_ID = D.APORTN_RECIP_ID
   AND  D.AWARD_CURNT_STATUS_CD = 'A'
   AND  D.PAYEE_TYPE_CD = '00'
   AND  D.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(D.ENTLMT_TYPE_CD,2,1) = '1'
   AND  D.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT 'FY11' FISCAL_YEAR, C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR,
         D.COMBND_DEGREE_PCT  
 FROM  
        (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2011_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C,
        
       (SELECT DISTINCT FILE_NUM_BAL||TD AS FILE_NBR, 
               TO_NUMBER(COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST 
        WHERE  EXTRACT_ID = 177
        AND    PAYEE_NUMBER = '00'
        AND    BENEFIT_TYPE = '1') D   
   
 WHERE  C.FILE_NBR = D.FILE_NBR)  )  X 
ORDER BY SEQ)     
WHERE ROWNUM < 35;

SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(
(SELECT DISTINCT 'FY12' FISCAL_YEAR, C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR, 
        D.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201209 D, -- FY2012

       (SELECT B.*
        FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2012_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  D.FILE_NBR = C.FILE_NBR
   AND  D.PTCPNT_VET_ID = C.PTCPNT_VET_ID
   AND  D.PTCPNT_VET_ID = D.PTCPNT_BENE_ID
   AND  D.PTCPNT_BENE_ID = D.APORTN_RECIP_ID
   AND  D.AWARD_CURNT_STATUS_CD = 'A'
   AND  D.PAYEE_TYPE_CD = '00'
   AND  D.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(D.ENTLMT_TYPE_CD,2,1) = '1'
   AND  D.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT 'FY12' FISCAL_YEAR, C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR,
         D.COMBND_DEGREE_PCT  
 FROM  
        (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2012_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C,
        
       (SELECT DISTINCT FILE_NUM_BAL||TD AS FILE_NBR, 
               TO_NUMBER(COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST 
        WHERE  EXTRACT_ID = 189
        AND    PAYEE_NUMBER = '00'
        AND    BENEFIT_TYPE = '1') D   
   
 WHERE  C.FILE_NBR = D.FILE_NBR)  )  X 
ORDER BY SEQ)     
WHERE ROWNUM < 35;


SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(SELECT DISTINCT 'FY13' FISCAL_YEAR, C.FILE_NBR, C.DGNSTC_TYPE_CD, C.PRCNT_NBR,
        A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201309 A, -- FY2013

       (SELECT B.*
         FROM
             (SELECT A.*, ROW_NUMBER() OVER (PARTITION BY FILE_NBR ORDER BY 
                     PRCNT_NBR DESC NULLS LAST, DGNSTC_TYPE_CD DESC NULLS LAST) 
                     AS VET_RANK
           FROM
                (SELECT * 
                 FROM   AH4430_SEP_2013_BASE
                 WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A) B
        WHERE VET_RANK = 1) C

 WHERE  C.FILE_NBR = A.FILE_NBR
   AND  C.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL) X 
ORDER BY SEQ)         
WHERE ROWNUM < 35;


-- 4. Denials
SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(SELECT B.*
 FROM
(SELECT A.*, ROW_NUMBER() OVER (PARTITION BY A.FILE_NBR||A.DGNSTC_TYPE_CD ORDER
         BY A.RATING_DT DESC) AS VET_RANK
 FROM
(SELECT Z.*, 
        CASE WHEN Z.DEATH_DT IS NULL THEN 'Y' 
             WHEN Z.DEATH_DT IS NOT NULL THEN 'N'
        END LIVING_IND 
 FROM   AH4430_ISSUES_BASE_6 Z
 WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON') A ) B
WHERE VET_RANK = 1) x
 
ORDER BY SEQ)         
WHERE ROWNUM < 101;
 

-- 5. denials on the rolls AND 6. by CDD

SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(
(SELECT DISTINCT 'FY11' FISCAL_YEAR, A.FILE_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_20110930_E6M A, -- FY2011

       (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY11') B

 WHERE  B.FILE_NBR = A.FILE_NBR
   AND  B.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT 'FY11' FISCAL_YEAR, B.FILE_NBR, A.COMBND_DEGREE_PCT   
 FROM  (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY11') B,
        
       (SELECT DISTINCT C.FILE_NUM_BAL||C.TD AS FILE_NBR, 
                TO_NUMBER(C.COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST C
        WHERE  C.EXTRACT_ID = 177
        AND    C.PAYEE_NUMBER = '00'
        AND    C.BENEFIT_TYPE = '1') A   
   
 WHERE  B.FILE_NBR = A.FILE_NBR)  )   x
ORDER BY SEQ)         
WHERE ROWNUM < 35;


SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(
(SELECT DISTINCT 'FY12' FISCAL_YEAR, A.FILE_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201209 A, -- FY2012

       (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY12') B

 WHERE  B.FILE_NBR = A.FILE_NBR
   AND  B.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND  A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND  A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND  A.AWARD_CURNT_STATUS_CD = 'A'
   AND  A.PAYEE_TYPE_CD = '00'
   AND  A.ENTLMT_TYPE_CD != '81'
   AND  SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND  A.COMBND_DEGREE_PCT IS NOT NULL)
UNION
(SELECT DISTINCT 'FY12' FISCAL_YEAR, B.FILE_NBR, A.COMBND_DEGREE_PCT   
 FROM  (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY12') B,
        
       (SELECT DISTINCT C.FILE_NUM_BAL||C.TD AS FILE_NBR, 
                TO_NUMBER(C.COMBINED_DEGREE_DISABILITY) AS COMBND_DEGREE_PCT
        FROM   CP_STG.CPMR_CLEANSE_HIST C
        WHERE  C.EXTRACT_ID = 189
        AND    C.PAYEE_NUMBER = '00'
        AND    C.BENEFIT_TYPE = '1') A   
   
 WHERE  B.FILE_NBR = A.FILE_NBR)  )    x
ORDER BY SEQ)         
WHERE ROWNUM < 35;


SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(SELECT DISTINCT 'FY13' FISCAL_YEAR, A.FILE_NBR, A.COMBND_DEGREE_PCT
 FROM   CORP_SNAPSHOTS_ARCH.SS_AWARD_CMPSIT_201309 A, -- FY2013

       (SELECT Z.*
        FROM   AH4430_ISSUES_BASE_6 Z
        WHERE  Z.DSBLTY_DECN_TYPE_CD = 'NOTSVCCON'
        AND    Z.FISCAL_YEAR = 'FY13') B

 WHERE  B.FILE_NBR = A.FILE_NBR
   AND B.PTCPNT_VET_ID = A.PTCPNT_VET_ID
   AND A.PTCPNT_VET_ID = A.PTCPNT_BENE_ID
   AND A.PTCPNT_BENE_ID = A.APORTN_RECIP_ID
   AND A.AWARD_CURNT_STATUS_CD = 'A'
   AND A.PAYEE_TYPE_CD = '00'
   AND A.ENTLMT_TYPE_CD != '81'
   AND SUBSTR(A.ENTLMT_TYPE_CD,2,1) = '1'
   AND A.COMBND_DEGREE_PCT IS NOT NULL) x
ORDER BY SEQ)         
WHERE ROWNUM < 35;


-- 7. Increased evaluations
SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM (
(SELECT 'FY11' FISCAL_YEAR, A.FILE_NBR, B.DGNSTC_TYPE_CD,
        B.PRCNT_NBR AS PRIOR_PERCENT, A.PRCNT_NBR AS NEW_PERCENT, A.DSBLTY_ID        

FROM   (SELECT * 
        FROM   AH4430_SEP_2011_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT * 
        FROM   AH4430_SEP_2010_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.DGNSTC_TYPE_CD = B.DGNSTC_TYPE_CD 
AND     A.DSBLTY_ID = B.DSBLTY_ID 
AND     A.PRCNT_NBR > B.PRCNT_NBR)
UNION ALL
(SELECT 'FY12' FISCAL_YEAR, A.FILE_NBR, B.DGNSTC_TYPE_CD, 
        B.PRCNT_NBR AS PRIOR_PERCENT, A.PRCNT_NBR AS NEW_PERCENT, A.DSBLTY_ID

FROM   (SELECT * 
        FROM   AH4430_SEP_2012_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT * 
        FROM   AH4430_SEP_2011_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.DGNSTC_TYPE_CD = B.DGNSTC_TYPE_CD
AND     A.DSBLTY_ID = B.DSBLTY_ID
AND     A.PRCNT_NBR > B.PRCNT_NBR)
UNION ALL
(SELECT 'FY13' FISCAL_YEAR, A.FILE_NBR, B.DGNSTC_TYPE_CD, 
        B.PRCNT_NBR AS PRIOR_PERCENT, A.PRCNT_NBR AS NEW_PERCENT, A.DSBLTY_ID

FROM   (SELECT * 
        FROM   AH4430_SEP_2013_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') A,
        
       (SELECT * 
        FROM   AH4430_SEP_2012_BASE
        WHERE  DSBLTY_DECN_TYPE_CD = 'SVCCONNCTED') B        
       
WHERE   A.FILE_NBR = B.FILE_NBR
AND     A.DGNSTC_TYPE_CD = B.DGNSTC_TYPE_CD
AND     A.DSBLTY_ID = B.DSBLTY_ID
AND     A.PRCNT_NBR > B.PRCNT_NBR))    x
ORDER BY SEQ)         
WHERE ROWNUM < 101;




-- 8. RECEIVED AND COMPLETED CLAIM COUNTS
-- NOTE: BLANK RECEIPT_FISCAL_YEAR IS FOR FY PRIOR TO FY 11 AND ARE NOT
-- INCLUDED IN THE REQUESTED COUNTS
SELECT * FROM (
SELECT X.*,ABS(DBMS_RANDOM.RANDOM) AS SEQ  
FROM
(SELECT * FROM AH4430_RATINGS_CLAIMS 
WHERE RECEIPT_FISCAL_YEAR IS NOT NULL) X
ORDER BY SEQ)         
WHERE ROWNUM < 101; 




